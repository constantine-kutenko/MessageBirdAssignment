---

#
#
#

- include_vars: "defaults/main.yml"
  tags: 
    - create

- name: Create a security group
  local_action:
    module: ec2_group
    name: "{{ ec2.security_group }}"
    description: "Security Group for {{ ec2.name }}"
    vpc_id: "{{ ec2.vpc_id }}"
    region: "{{ ec2.region }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9000
        to_port: 9000
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9090
        to_port: 9090
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9091
        to_port: 9091
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9093
        to_port: 9093
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  tags:
    - create

- name: Provision an EC2 instance
  local_action:
    module: ec2
    count: "{{ ec2.count }}"
    group: "{{ ec2.security_group }}"
    instance_type: "{{ ec2.type }}"
    image: "{{ ec2.image }}"
    vpc_subnet_id: "{{ ec2.vpc_subnet_id }}"
    wait: true
    region: "{{ ec2.region }}"
    assign_public_ip: true
    keypair: "{{ ec2.keypair }}"
    volumes:
      - device_name: /dev/sda2
        device_type: gp2
        volume_size: 8
  register: ec2
  tags:
    - create

- name: Debug
  debug: var=ec2
  tags:
    - create

- name: Remove any previously created EC2 instance(s) from the host group
  local_action: lineinfile
                dest="./ansible/hosts"
                regexp='^[\d\.]+ ansible_ssh_user='
                state=absent
  with_items: 
    - "{{ ec2.instances }}"
  tags: 
    - create

- name: Add the newly created EC2 instance(s) to the host group
  local_action: lineinfile
                dest="./ansible/hosts"
                regexp='^'
                insertafter="\[{{ site.name }}\]"
                line="[{{ site.name }}]\n{{ item.public_ip }} ansible_user={{ ec2.image_user }} ansible_private_key_file={{ ec2.private_key }}"
  with_items: 
    - "{{ ec2.instances }}"
  tags: 
    - create

- name: Wait for SSH to come up
  local_action: wait_for
                host={{ item.public_ip }}
                port=22
                state=started
  with_items: 
    - "{{ ec2.instances }}"
  tags: 
    - create

- name: Add tag to Instance(s)
  local_action: ec2_tag
                resource={{ item.id }}
                region={{ ec2.region }}
                state=present
  with_items: 
    - "{{ ec2.instances }}"
  args:
    tags:
      Name: "build-{{ site.name }}"
  tags: 
    - create
