---

#
#
#

- name: Download Prometheus {{ prometheus_version }}
  get_url:
    url: "{{ prometheus_download }}"
    dest: "{{ prometheus_source_dir }}/"
  tags:
    - install

- name: Extract
  unarchive:
    src: "{{ prometheus_source_dir }}/{{ prometheus_download|basename }}"
    dest: "{{ prometheus_install_dir }}"
    copy: false
  args:
    creates: "{{ prometheus_install_dir }}/prometheus-{{ prometheus_version }}.linux-amd64/prometheus"
  tags:
    - install

- name: Provision symlinks
  file:
    src: "{{ prometheus_install_dir }}/prometheus-{{ prometheus_version }}.linux-amd64"
    dest: "{{ prometheus_install_dir }}/prometheus"
    state: link
  tags:
    - install

- name: Create Prometheus group
  group:
    name: "{{ prometheus_user_info['group'] }}"
  tags:
    - configure

- name: Create Prometheus user
  user:
    name: "{{ prometheus_user_info['user'] }}"
    groups: "{{ prometheus_user_info['group'] }}"
    state: "present"
    system: true
    append: true
  tags:
    - configure

- name: Populate the configuration file
  template:
    src: "prometheus.yml.j2"
    dest: "{{ prometheus_config_file }}"
    owner: "{{ prometheus_user_info['user'] }}"
    group: "{{ prometheus_user_info['group'] }}"
  notify:
    - restart_prometheus
  tags:
    - configure

- name: Define filesystem objects permissions
  file:
    path: "{{ prometheus_install_dir }}"
    owner: "{{ prometheus_user_info['user'] }}"
    group: "{{ prometheus_user_info['group'] }}"
    recurse: true
  tags:
    - configure

- name: Ensure {{ prometheus_local_storage }} exists
  file:
    path: "{{ prometheus_local_storage }}"
    state: "directory"
    owner: "{{ prometheus_user_info['user'] }}"
    group: "{{ prometheus_user_info['group'] }}"
  tags:
    - configure

- name: Configure a service unit
  template:
    src: "prometheus.service.j2"
    dest: "/etc/systemd/system/prometheus.service"
  notify:
    - reload_systemd
    - restart_prometheus
  when: ansible_service_mgr == "systemd"
  tags:
    - configure
